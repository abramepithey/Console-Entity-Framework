// <auto-generated />
using System;
using ConsoleTests.EntityFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleTests.EntityFramework.Migrations
{
    [DbContext(typeof(FridgeContext))]
    [Migration("20210505031014_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.BoughtIngredient", b =>
                {
                    b.Property<Guid>("BoughtIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateBought")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("TEXT");

                    b.HasKey("BoughtIngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("BoughtIngredients");
                });

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.ListIngredient", b =>
                {
                    b.Property<Guid>("ListIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("TEXT");

                    b.HasKey("ListIngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ListIngredients");
                });

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.BoughtIngredient", b =>
                {
                    b.HasOne("ConsoleTests.EntityFramework.Models.Ingredient", "Ingredient")
                        .WithMany("BoughtIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.ListIngredient", b =>
                {
                    b.HasOne("ConsoleTests.EntityFramework.Models.Ingredient", "Ingredient")
                        .WithMany("ListIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("ConsoleTests.EntityFramework.Models.Ingredient", b =>
                {
                    b.Navigation("BoughtIngredients");

                    b.Navigation("ListIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
